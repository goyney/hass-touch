@import '../../style/variables';

/*
 * INPUT[type='range'] Shadow Elements Selectors
 * ============================================= *
     https://codepen.io/long-lazuli/pen/WbyqKg    *
                                                 */
$defaultBrowserList : webkit, moz, ms!default;

// this function will be used in all this script.
@function _contains(/* List */ $haystack, /* Any */ $needle) {
  @if index($haystack, $needle){
    @return true;
  }@else{
    @return false;
  }
}

// UGLY Browsers hacks here :
// ( is there a better use for them ? -_^ )
@mixin browser-restrict-to ( $browserList... ){

  @if( length($browserList) == 0 ){

    @content;

  } @else {

    @if (  _contains($browserList, webkit)){
      // http://browserhacks.com/#hack-f4ade0540d8e891e8190065f75acb186
      &:not(*:root) {  @content; }
    }

    @if ( _contains($browserList, moz)){
      // http://browserhacks.com/#hack-8e9b5504d9fda44ec75169381b3c3157
      @supports (-moz-appearance:meterbar) { @content; }
    }

    @if ( _contains($browserList, ms)){
      // http://browserhacks.com/#hack-f1070533535a12744a0381a75087a915
      @at-root {
        _:-ms-input-placeholder,
        :root & { @content; }
      }
      // http://browserhacks.com/#hack-d19e53a0fdfba5ec0f283ae86175a3af
      @at-root {
        _:-ms-fullscreen,
        :root & { @content; }
      }
    }

  }
}


@mixin -range-track ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, webkit)){
    &::-webkit-slider-runnable-track {        @content; }
  }
  @if ( _contains($browserList, moz)){
    &::-moz-range-track {                     @content; }
  }
  @if ( _contains($browserList, ms)){
    &::-ms-track {                            @content; }
  }

}


@mixin -range-thumb ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, webkit)){
    &::-webkit-slider-thumb {                 @content; }
  }
  @if ( _contains($browserList, moz)){
    &::-moz-range-thumb {                     @content; }
  }
  @if ( _contains($browserList, ms)){
    &::-ms-thumb {                            @content; }
  }
}

@mixin -range-fill-lower ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, webkit)){
    &::-webkit-slider-thumb::before {          @content; }
  }
  @if ( _contains($browserList, moz)){
    &::-moz-range-progress {                  @content; }
  }
  @if ( _contains($browserList, ms)){
    &::-ms-fill-lower {                       @content; }
  }
}

@mixin -range-fill-upper ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, ms)){
    &::-ms-fill-upper {                       @content; }
  }
}

// Usefull only on webkit.
@mixin -range-track-outline ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, webkit)){
    &::-webkit-slider-runnable-track::after { @content; }
  }
}

@mixin -range-tooltip ( $browserList... ) {
  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, ms)){
    &::-ms-tooltip {                            @content; }
  }
}

@mixin -range-thumb__margin-top($margin){
  @include -range-thumb( 'webkit' ) {
    margin-top: $margin;
    &::before {
      margin-top: ( $margin * -1 );
    }
  }
}

@mixin -range__reset ( $browserList... ) {
  @include browser-restrict-to($browserList...){
    &, & /deep/ * {
      &, &::before, &::after {
        box-sizing: border-box;
      }
    }
    & /deep/ * {
      position: relative;
    }
  }

  @if( length($browserList) == 0 ){ $browserList: $defaultBrowserList}

  @if ( _contains($browserList, webkit)) or ( _contains($browserList, moz)) {
    // Webkit/Gecko :
    @include browser-restrict-to($browserList...){
      font-size: 1em;
    }
  }
  @if ( _contains($browserList, webkit)) {
  // Webkit reset :
    @include browser-restrict-to(webkit){
      -webkit-appearance: none;
      &:focus {
        outline: none;
      }
    }
  }

  @if ( _contains($browserList, webkit)) {
    &::-webkit-slider-runnable-track {
      -webkit-appearance: none;
      position: relative;
      z-index: 1;

      &::after {
        content: "";
        display: block;
        position: absolute;
        top: 0; left: 0;
        width: inherit; height: inherit;
        border-radius: inherit;
        z-index: -1;
      }
    }
    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      position: relative;
      //z-index: -1;
      text-align: center;
      &::before {
        position: absolute;
        content: "";
        transform: translate(-100%, -50%);
        display: block;
        z-index: -1;
        left: 0;
        top: 50%;
      }
    }
  }
}

#lights-panel {
  align-items: center;
  display: flex;
  height: 480px;
  overflow-y: scroll;

  &::-webkit-scrollbar {
    display: none;
  }
}

.group-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  padding: 0 .6rem;

  h2 {
    align-items: center;
    background-color: rgba($black, .6);
    color: rgba($white, .6);
    display: flex;
    font: {
      size: 12px;
      weight: 300;
    }
    justify-content: space-between;
    min-height: 35px;
    padding: .5rem;
    text-transform: uppercase;
  }
}

.light-grouping {
  margin: 1rem .6rem 0 .6rem;

  .light-group {
    display: flex;
    padding: 0 .5rem;
  }

  .switch {
    align-items: center;
    display: flex;
    flex-direction: column;
    font-size: 12px;
    line-height: 12px;
    padding: 0 .5rem 1rem;
    text-align: center;
    width: 110px;

    i {
      align-items: center;
      background-color: $grey;
      border: 2px solid rgba($white, .2);
      border-radius: 100px;
      display: flex;
      flex-direction: column;
      font-size: 36px;
      height: 80px;
      justify-content: center;
      margin-bottom: 10px;
      position: relative;
      transition: background-color 1s ease;
      width: 80px;

      span {
        bottom: 8px;
        font: {
          size: 10px;
          style: normal;
        }
        position: absolute;
        text-transform: uppercase;
      }
    }

    &.on {
      i {
        background-color: $orange;
      }
    }
  }
}
